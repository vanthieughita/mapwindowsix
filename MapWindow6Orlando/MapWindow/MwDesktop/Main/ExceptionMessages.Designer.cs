//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MapWindow.Main {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MapWindow.Main.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument %S cannot be negative..
        /// </summary>
        internal static string Argument_CannotBeNegative_S {
            get {
                return ResourceManager.GetString("Argument_CannotBeNegative_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument %S was not of the correct type..
        /// </summary>
        internal static string Argument_IncorrectType_S {
            get {
                return ResourceManager.GetString("Argument_IncorrectType_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument %S1 was not the correct type for %S2.
        /// </summary>
        internal static string Argument_IncorrectType_S1_for_S2 {
            get {
                return ResourceManager.GetString("Argument_IncorrectType_S1_for_S2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument %S1 could not be cast to %S2.
        /// </summary>
        internal static string Argument_InvalidCast_from_S1_to_S2 {
            get {
                return ResourceManager.GetString("Argument_InvalidCast_from_S1_to_S2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument %S cannot be null..
        /// </summary>
        internal static string Argument_Null_S {
            get {
                return ResourceManager.GetString("Argument_Null_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument %S was out of range..
        /// </summary>
        internal static string Argument_OutOfRange_S {
            get {
                return ResourceManager.GetString("Argument_OutOfRange_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory %S could not be found..
        /// </summary>
        internal static string IO_DirectoryNotFound_S {
            get {
                return ResourceManager.GetString("IO_DirectoryNotFound_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file %S can&apos;t be deleted, probably because it is currently in use by another application..
        /// </summary>
        internal static string IO_FileCouldNotBeDeleted_S {
            get {
                return ResourceManager.GetString("IO_FileCouldNotBeDeleted_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file %S already exists, do you wish to overwrite it?.
        /// </summary>
        internal static string IO_FileExits {
            get {
                return ResourceManager.GetString("IO_FileExits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file %S could not be found..
        /// </summary>
        internal static string IO_FileNotFound_S {
            get {
                return ResourceManager.GetString("IO_FileNotFound_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file %S could not be opened..
        /// </summary>
        internal static string IO_FileOpen_S {
            get {
                return ResourceManager.GetString("IO_FileOpen_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value %S could not be parsed as a number..
        /// </summary>
        internal static string NotNumeric_S {
            get {
                return ResourceManager.GetString("NotNumeric_S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This can occur if the file does not yet exist or if the format is not Format32bppArgb format..
        /// </summary>
        internal static string Raster_InvalidBitmapFormat {
            get {
                return ResourceManager.GetString("Raster_InvalidBitmapFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The low value for this break could not be parsed into a double..
        /// </summary>
        internal static string Raster_InvalidLowValue {
            get {
                return ResourceManager.GetString("Raster_InvalidLowValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range calculations require two, numeric values..
        /// </summary>
        internal static string Raster_RangeRequiresBivalue {
            get {
                return ResourceManager.GetString("Raster_RangeRequiresBivalue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This opperation is not valid if the Raster property is null..
        /// </summary>
        internal static string Raster_RasterUndefined {
            get {
                return ResourceManager.GetString("Raster_RasterUndefined", resourceCulture);
            }
        }
    }
}
